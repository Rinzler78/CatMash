// <auto-generated />
using System;
using CatMash.DataStore.EF.SQLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CatMash.DataStore.EF.SQLite.Migrations
{
    [DbContext(typeof(CatMashSQLiteDbContext))]
    [Migration("20191208170612_Property (Add)")]
    partial class PropertyAdd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("CatMash.DataStore.Cat", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("NbMash")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.HasIndex("ImageId");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("CatMash.DataStore.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("CatMash.DataStore.Mash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LeftCatName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RightCatName")
                        .HasColumnType("TEXT");

                    b.Property<string>("WinnerCatName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LeftCatName");

                    b.HasIndex("RightCatName");

                    b.HasIndex("WinnerCatName");

                    b.ToTable("Mash");
                });

            modelBuilder.Entity("CatMash.DataStore.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("CatMash.DataStore.Cat", b =>
                {
                    b.HasOne("CatMash.DataStore.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });

            modelBuilder.Entity("CatMash.DataStore.Mash", b =>
                {
                    b.HasOne("CatMash.DataStore.Cat", "LeftCat")
                        .WithMany()
                        .HasForeignKey("LeftCatName");

                    b.HasOne("CatMash.DataStore.Cat", "RightCat")
                        .WithMany()
                        .HasForeignKey("RightCatName");

                    b.HasOne("CatMash.DataStore.Cat", "WinnerCat")
                        .WithMany()
                        .HasForeignKey("WinnerCatName");
                });
#pragma warning restore 612, 618
        }
    }
}
